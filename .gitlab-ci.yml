stages:
  - lint-and-test
  - build
  - publish

lint-frontend:
  stage: lint-and-test
  image: $DOCKER_REGISTRY_PULL/frontend-builder
  script:
    - yarn --cwd ./web-client/
    - yarn --cwd ./web-client/ lint
    - yarn --cwd ./web-client/ build
  artifacts:
    paths:
      - web-client/build
  only:
    - develop
    - master
    - merge_requests
    - tags

lint-and-test-rust:
  services:
    - mariadb:10.7
  variables:
    MYSQL_ROOT_PASSWORD: mysql_root
    MYSQL_USER: mysql_user
    MYSQL_PASSWORD: mysql_pass
    MYSQL_DATABASE: deputy
  stage: lint-and-test
  image: $DOCKER_REGISTRY_PULL/rust-builder
  script:
    - cargo clippy -- -Dwarnings
    - cargo fmt -- --check
    - cargo tarpaulin --skip-clean --out Xml
  coverage: '/^\d+.\d+% coverage/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  only:
    - develop
    - master
    - merge_requests
    - tags
  except:
    - /^deputy-frontend-.*$/

build-and-upload-x86-64bit-linux-release-for-deputy-package-server:
  stage: build
  needs: ["lint-and-test-rust"]
  image: $DOCKER_REGISTRY_PULL/rust-builder
  script:
    - cargo deb --target x86_64-unknown-linux-gnu -p deputy-package-server
    - DEB_FILE=$(find ./target/x86_64-unknown-linux-gnu/debian/ -maxdepth 1 -type f -name "*.deb")
    - 'curl -u $OCR_DEPLOYMENT_USER:$OCR_DEPLOYMENT_PASSWORD -X POST -H "Content-Type: multipart/form-data" --data-binary "@$DEB_FILE" $OCR_APT_REPOSITORY'
  only:
    - /^deputy-package-server-.*$/
  except:
    - branches

build-and-upload-x86-64bit-linux-release-for-deputy-cli:
  stage: build
  needs: ["lint-and-test-rust"]
  image: $DOCKER_REGISTRY_PULL/rust-builder
  script:
    - cargo deb --target x86_64-unknown-linux-gnu -p deputy
    - DEB_FILE=$(find ./target/x86_64-unknown-linux-gnu/debian/ -maxdepth 1 -type f -name "*.deb")
    - 'curl -u $OCR_DEPLOYMENT_USER:$OCR_DEPLOYMENT_PASSWORD -X POST -H "Content-Type: multipart/form-data" --data-binary "@$DEB_FILE" $OCR_APT_REPOSITORY'
  only:
    - /^deputy-cli-.*$/
  except:
    - branches

publish-deputy-frontend-to-docker-images:
  stage: publish
  services:
    - docker:20.10.17-dind
  image: $DOCKER_REGISTRY_PULL/docker:20.10.17
  script:
    - docker info
    - echo "$OCR_DEPLOYMENT_PASSWORD" | docker login $DOCKER_REGISTRY --username $OCR_DEPLOYMENT_USER --password-stdin
    - docker pull $DOCKER_REGISTRY/deputy-frontend:latest
    - docker build -t deputy-frontend -f ./docker/deputy-frontend/Dockerfile .
    - docker tag deputy-frontend:latest $DOCKER_REGISTRY/deputy-frontend:latest
    - docker push $DOCKER_REGISTRY/deputy-frontend:latest
  only:
    - /^deputy-frontend-.*$/
  except:
    - branches

publish-deputy-package-server-to-docker-images:
  stage: publish
  services:
    - docker:20.10.17-dind
  needs: ["build-and-upload-x86-64bit-linux-release-for-deputy-package-server"]
  image: $DOCKER_REGISTRY_PULL/docker:20.10.17
  script:
    - docker info
    - echo "$OCR_DEPLOYMENT_PASSWORD" | docker login $DOCKER_REGISTRY --username $OCR_DEPLOYMENT_USER --password-stdin
    - docker pull $DOCKER_REGISTRY/deputy-package-server:latest
    - docker build -t deputy-package-server ./docker/deputy-package-server
    - docker tag deputy-package-server:latest $DOCKER_REGISTRY/deputy-package-server:latest
    - docker push $DOCKER_REGISTRY/deputy-package-server:latest
  only:
    - /^deputy-package-server-.*$/
  except:
    - branches

publish-deputy-cli-to-docker-images:
  stage: publish
  variables:
    DEPUTY: "1"
  needs: ["build-and-upload-x86-64bit-linux-release-for-deputy-cli"]
  trigger:
    project: open-cyber-range/internal/support-docker-images
    strategy: depend
  only:
    - /^deputy-cli-.*$/
  except:
    - branches

sync-to-github:
  stage: publish
  image: $DOCKER_REGISTRY_PULL/ocr-base-deployment-image
  before_script:
    - apt update && apt install -y git
  script:
    - git remote remove github || echo "No repo found"
    - git remote add github https://mannyfred:$MANFRED_GITHUB_TOKEN@github.com/Open-Cyber-Range/Deputy.git
    - git checkout master
    - git pull --rebase origin master
    - git push github master:main --force
  only:
    - master

