stages:
  - build
  - deploy

build-frontend:
  stage: build
  image: $DOCKER_REGISTRY_PULL/frontend-builder
  script:
    - yarn --cwd ./web-client/
  only:
    - develop
    - master
    - merge_requests
    - tags

lint-and-test:
  stage: build
  image: $DOCKER_REGISTRY_PULL/rust-builder
  script:
    - cargo clippy -- -Dwarnings
    - cargo test
    # - cargo tarpaulin --skip-clean --out Xml
  # coverage: '/^\d+.\d+% coverage/'
  # artifacts:
  #   reports:
  #     coverage_report:
  #       coverage_format: cobertura
  #       path: coverage/cobertura-coverage.xml
  only:
    - develop
    - master
    - merge_requests
    - tags

build-and-upload-x86-64bit-linux-release-for-deputy-package-server:
  stage: build
  needs: ["lint-and-test"]
  image: $DOCKER_REGISTRY_PULL/rust-builder
  script:
    - cargo deb --target x86_64-unknown-linux-gnu -p deputy-package-server
    - DEB_FILE=$(find ./target/x86_64-unknown-linux-gnu/debian/ -maxdepth 1 -type f -name "*.deb")
    - 'curl -u $OCR_DEPLOYMENT_USER:$OCR_DEPLOYMENT_PASSWORD -X POST -H "Content-Type: multipart/form-data" --data-binary "@$DEB_FILE" $OCR_APT_REPOSITORY'
  only:
    - /^deputy-package-server-.*$/
  except:
    - branches

build-and-upload-x86-64bit-linux-release-for-deputy-cli:
  stage: build
  needs: ["lint-and-test"]
  image: $DOCKER_REGISTRY_PULL/rust-builder
  script:
    - cargo deb --target x86_64-unknown-linux-gnu -p deputy
    - DEB_FILE=$(find ./target/x86_64-unknown-linux-gnu/debian/ -maxdepth 1 -type f -name "*.deb")
    - 'curl -u $OCR_DEPLOYMENT_USER:$OCR_DEPLOYMENT_PASSWORD -X POST -H "Content-Type: multipart/form-data" --data-binary "@$DEB_FILE" $OCR_APT_REPOSITORY'
  only:
    - /^deputy-cli-.*$/
  except:
    - branches

staging:
  variables:
    DEPUTY_PACKAGE_SERVER: "1"
    DEPUTY: "1"
  stage: deploy
  trigger:
    open-cyber-range/internal/support-docker-images
  only:
    - master
    - tags
